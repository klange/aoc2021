#!/usr/bin/env kuroko
'''
Template
'''
import fileio
import kuroko

let data
with fileio.open(kuroko.argv[1] if len(kuroko.argv) > 1 else kuroko.argv[0].replace('.krk','.txt'),'r') as f:
    data = f.readlines()

let lines = [line.strip() for line in data]
#let inputs = [int(x) for x in data[0].split(',')]

let height = len(lines)
let width = len(lines[0])

let visited = []
for i in range(height):
    let row = [0] * width
    visited.append(row)

def islowest(y,x):
    let this = int(lines[y][x])
    let ds = [(-1,0),(1,0),(0,-1),(0,1)]
    for d in ds:
        let _y, _x = d[0] + y, d[1] + x
        if _y < 0 or _y >= height or _x < 0 or _x >= width:
            continue
        if int(lines[_y][_x]) <= this:
            return False
    return True

let risk = 0
for y in range(height):
    for x in range(width):
        if islowest(y,x):
            risk += 1 + int(lines[y][x])

print(risk)

def visit(y,x):
    let this = int(lines[y][x])
    visited[y][x] = 1
    let ds = [(-1,0),(1,0),(0,-1),(0,1)]
    let count = 0
    for d in ds:
        let _y, _x = d[0] + y, d[1] + x
        if _y < 0 or _y >= height or _x < 0 or _x >= width:
            continue
        if visited[_y][_x]:
            continue
        if int(lines[_y][_x]) == 9:
            continue
        if int(lines[_y][_x]) > this:
            count += visit(_y,_x)
    return count + 1

let basins = []
for y in range(height):
    for x in range(width):
        if islowest(y,x):
            basins.append(visit(y,x))

basins = sorted(basins)
print(basins[-1] * basins[-2] * basins[-3])

