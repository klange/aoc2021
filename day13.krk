#!/usr/bin/env kuroko
'''
Template
'''
import fileio
import kuroko

let data
with fileio.open(kuroko.argv[1] if len(kuroko.argv) > 1 else kuroko.argv[0].replace('.krk','.txt'),'r') as f:
    data = f.readlines()

let lines = [line.strip() for line in data]
let inputs = []
let insts = []

for line in lines:
    if not line: break
    inputs.append([int(x) for x in line.split(',')])

for line in lines:
    if not line.startswith('fold'): continue
    insts.append((lambda x,y: (x,int(y)))(*line.split('along ')[1].split('=')))

def dump(inputs):
    let unique = {tuple(dot): True for dot in inputs}
    let width, height = max(x for x,y in unique.keys()) + 1, max(y for x,y in unique.keys()) + 1
    if width < 300:
        print('\n'.join([''.join(['â–ˆ' if (x,y) in unique else ' ' for x in range(width)]) for y in range(height)]))
    print(len(unique))

for axis, at in insts:
    let ind = 1 if axis == 'y' else 0
    for d in range(len(inputs)):
        if inputs[d][ind] >= at:
            inputs[d][ind] = at - (inputs[d][ind] - at)
    dump(inputs)

